/* CArtAgO + JaCa naive gradle build file
 * - to be improved -
 *
 * Note:
 *
 * Task to create the distribution: makeDist
 *
 */

apply plugin: 'java'
apply plugin: 'eclipse'

version '2.4-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
  main {

      java {
        srcDir 'src/main/java'
      }

      // output.classesDir = 'build/classes/main'
  }

  jaca {

      java {
        srcDir 'src/jaca/java'
      }

      // output.classesDir = 'build/classes/jaca'
      compileClasspath = files ('build/classes/main','build/classes/jaca') + configurations.compile
  }
}


/* still using local dep */
dependencies {
  compile files('libs/lipermi-0.4.jar')
  compile group: 'org.jason-lang', name: 'jason'    , version: '2.4-SNAPSHOT'  , changing: true , transitive: false

	// vert.x
  	compile "io.vertx:vertx-core:3.7.0"
  	compile "io.vertx:vertx-sync:3.7.0"
  	compile "io.vertx:vertx-unit:3.7.0"
	compile "io.vertx:vertx-rx-java:3.7.0"
  	compile "io.vertx:vertx-web:3.7.0"

	compile "com.fasterxml.jackson.core:jackson-databind:2.9.8"
	
</dependency>


}

/* still not used */
repositories {
  mavenCentral()
	maven {
 	    url "http://jacamo.sourceforge.net/maven2"
  	}
}

task generateRMIstubs(type:Exec, dependsOn: classes) {
	workingDir 'build/classes/main'
  	commandLine 'rmic', '-classpath', '.', 'cartago.infrastructure.rmi.AgentBodyRemote'
  	commandLine 'rmic', '-classpath', '.', 'cartago.infrastructure.rmi.CartagoNodeRemote'
  	commandLine 'rmic', '-classpath', '.', 'cartago.infrastructure.rmi.CartagoCallbackRemote'
}

task cartagoJar(type: Jar, dependsOn: [ classes, generateRMIstubs ]) {
  baseName 'cartago'
  // from 'build/classes/main'
  include '**'
}

task jacaJar(type: Jar, dependsOn: compileJacaJava) {
  baseName 'jaca'
  // from 'build/classes/jaca'
  include '**'
}

javadoc {
    options.showAll()
    options.encoding('UTF-8')
    options.setUse(true)
    options.author(true)
    options.version(true)
    options.windowTitle('Cartago API')
    options.docTitle('Cartago API')
    options.footer('<a href=http://cartago.sf.net>Cartago Site</a>')
    destinationDir = file("${buildDir}/../docs/api")
    doFirst {
        javadoc.title = 'Cartago API'
        javadoc.options.docTitle = javadoc.title
    }
}
// the following lines is used to avoid errors while generating javadoc
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
}


task makeDist (dependsOn: ['build','jar']) {
     copy {
          from '.'
          into 'build/dist/cartago-'+version
          include '*.html'
          include 'LICENSE'
          include 'README.md'
      }
      copy {
          from 'src/main/java'
          into 'build/dist/cartago-'+version+'/src/main'
          include('**')
      }
      copy {
          from 'src/jaca/java'
          into 'build/dist/cartago-'+version+'/src/jaca'
          include('**')
      }
      copy {
          from 'src/examples/java'
          into 'build/dist/cartago-'+version+'/examples/main'
          include('**')
      }
      copy {
          from 'src/examples/jaca'
          into 'build/dist/cartago-'+version+'/examples/jaca'
          include('**')
      }
      copy {
          from 'src/test/java'
          into 'build/dist/cartago-'+version+'/test/main'
          include('**')
      }
      copy {
          from 'src/test/jaca'
          into 'build/dist/cartago-'+version+'/test/jaca'
          include('**')
      }
      copy {
          from 'libs'
          into 'build/dist/cartago-'+version+'/lib'
          include('**')
      }
      copy {
          from 'docs/cartago_by_examples'
          into 'build/dist/cartago-'+version+'/doc'
          include('*.pdf')
      }
      cartagoJar {
        destinationDir = new File('build/dist/cartago-'+version+'/lib')
      }
      jacaJar {
        destinationDir = new File('build/dist/cartago-'+version+'/lib')
      }
}

artifacts {
    archives cartagoJar
    archives jacaJar
}
